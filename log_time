Выполнение
1. Сверстать 3х колоночный макет. Основное содержимое страницы фиксировано по ширине и центрируется по окну браузера; Макет должен содержать: меню, контент и футер.
2. Меню должно содержать выпадающие подпункты
3. На основной странице нужно реализовать систему принятия решений (например, система, которая анализирует, получит ли студент зачет автоматом).
Нужно реализовать ввод названия предмета, количество оценок (исходя из этого количества выводить поля для внесения этих оценок), также должны быть поля для подсчета доли пропущенных занятий по уважительной и неуважительной причине.
4. Осуществить проверку полей на пустоту, на допустимость значений, деление на ноль. После проверки вывести результат (например, если средний балл больше 4 и доля пропущенных по неуважительной < 10 %, то зачет получен).
5. Предусмотреть отправку этих результатов на сервер. 

Примечание:
при выполнение тестового задания использовать следующие технологии: JavaScript, AngularJS, AJAX.
приложение должно собираться сборщиком проектов Gulp
приложение должно быть одностраничное
наличие тестов (unit, e2e) будет большим плюсом

// --------------
14:30
Adaptive Web Design, Twitter Bootstrap;

14:45
..
14:54 - первый вариант


2) 15:06

3. На основной странице нужно реализовать систему принятия решений (например, система, которая анализирует, получит ли студент зачет автоматом).
Нужно реализовать ввод названия предмета, количество оценок (исходя из этого количества выводить поля для внесения этих оценок), также должны быть поля для подсчета доли пропущенных занятий по уважительной и неуважительной причине.

3) 15:10 - ...
система, которая анализирует, получит ли студент зачет автоматом

-  ввод
 -- названия предмета
 -- количество оценок
 -- (исходя из этого количества выводить поля для внесения этих оценок)
   -- должны быть поля для подсчета доли пропущенных занятий по уважительной и неуважительной причине.

15:28 (WebStorm)

 -- названия предмета
 -- количество оценок
- 15:38

-16:33 c Gulp'ом не получается пока. Отложил.

16:44 перерыв _ на _ обед - 17:04

-17:15 макет

-17:45 ерунду всукую делал, ничего конкретного


18:25 - приступил к 4


4. Осуществить проверку полей на пустоту, на допустимость значений, деление на ноль. После проверки вывести результат (например, если средний балл больше 4 и доля пропущенных по неуважительной < 10 %, то зачет получен).

- 19:06  заглушки, @realizating

55 мин.

19:21 к 5

5. Предусмотреть отправку этих результатов на сервер. 

- интересный пример


@otladka

@
Опыт работы с JavaScript (jQuery, reactjs, angularjs)
Adaptive Web Design, Twitter Bootstrap;

Опыт практического использования Backbone и JS фреймворков;

/*
Для работы по вакансии необходимы:
    Отличные знания HTML/CSS;
    Быть с JavaScript и jQuery на "ты";
    Опыт практического использования Backbone и JS фреймворков;
    Опыт работы с системами контроля версий (предпочтительно Git);
    Способность к командной работе;
    Опыт взаимодействия с Заказчиком;
    В сжатые сроки осваивать новые технологии для решения текущих задач.
*/
