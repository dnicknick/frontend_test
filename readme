1. Сверстать 3х колоночный макет. Основное содержимое страницы фиксировано по ширине и центрируется по окну браузера; Макет должен содержать: меню, контент и футер.
2. Меню должно содержать выпадающие подпункты
3. На основной странице нужно реализовать систему принятия решений (например, система, которая анализирует, получит ли студент зачет автоматом).
Нужно реализовать ввод названия предмета, количество оценок (исходя из этого количества выводить поля для внесения этих оценок), также должны быть поля для подсчета доли пропущенных занятий по уважительной и неуважительной причине.
4. Осуществить проверку полей на пустоту, на допустимость значений, деление на ноль. После проверки вывести результат (например, если средний балл больше 4 и доля пропущенных по неуважительной < 10 %, то зачет получен).
5. Предусмотреть отправку этих результатов на сервер.

Примечание:
при выполнение тестового задания использовать следующие технологии: JavaScript, AngularJS, AJAX.
приложение должно собираться сборщиком проектов Gulp
приложение должно быть одностраничное
наличие тестов (unit, e2e) будет большим плюсом

---------------
@fixme
  + Сверстать 3х колоночный макет.

@ToDo
  - приложение должно собираться сборщиком проектов Gulp
  - наличие тестов (unit, e2e) будет большим плюсом
  - refactor js-code

@notes
Хотелось, чтобы в тестовом задании ты показал свои знания в применяемых инструментах и технологиях.
Есть некоторые нюансы которые стоит доработать и привести в законченный вид.

Что нужно доделать:
1. Организовать файлы проекта в понятную структуру

2. Сделать сборку проекта.
  - Кроме самой сборки сборщик должен и тянуть зависимости -
    -- angular,
    -- bootstrap и т.д.
    -- должны скачиваться при сборке.

3. Верстку поправить

4. В работе с DOM использовать AngularJS,
  не использовать создание элементов DOMа чистым JavaScript'ом,
  а например использовать шаблоны и ui-router

5. Для получения,
  - вставки данных используйте модели из фреймворка AngularJS,
   а не такие конструкции: document.getElementById("count_ratings").value

6. доделайте валидацию данных. не используя браузерные HTML5 возможности, а AngularJS
